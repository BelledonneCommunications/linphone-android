// Project information
buildDir = 'bin'


buildscript {
    repositories {
	google()
        jcenter()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'
    }
}

allprojects {
    repositories {
	google()
        jcenter()
        mavenCentral()
        mavenLocal()
    }
}

apply plugin: 'com.android.library'

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.16.1'
    implementation 'com.android.support:support-v4:26.0.2'
}


def srcDirs = ['submodules/mediastreamer2/java/src', 'src/linphone-wrapper', 'src/android']

def excludeFiles = []

excludeFiles.add('**/Firebase*')
excludeFiles.add('**/gcm*')
excludeFiles.add('**/mediastream/MediastreamerActivity.java')

def excludePackage = []

excludePackage.add('**/gdb.*')
excludePackage.add('**/libopenh264**')
excludePackage.add('**/**tester**')
excludePackage.add('**/LICENSE.txt')

android {
    defaultConfig {
        compileSdkVersion 26
        buildToolsVersion "27.0.3"
        multiDexEnabled true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifestSdk.xml'
            java.srcDirs = srcDirs
            resources.srcDirs = srcDirs
            aidl.srcDirs = srcDirs
            renderscript.srcDirs = srcDirs
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']

            java.excludes = excludeFiles

            // Exclude some useless files
            packagingOptions {
                excludes = excludePackage
            }
        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

///////////// Task /////////////

task(releaseJavadoc, type: Javadoc, dependsOn: "assembleRelease") {
    source = ['submodules/mediastreamer2/java/src', 'src/linphone-wrapper']
    excludes = ['**/mediastream/MediastreamerActivity.java',
                '**/**.html',
                '**/**.aidl']
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += files(android.libraryVariants.release.javaCompile.classpath.files)
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar, dependsOn: releaseJavadoc) {
    classifier = 'javadoc'
    from releaseJavadoc.destinationDir
}

task sdkZip(type: Zip) {
    String appName = "linphone-android-sdk"
    String gitSha = 'git describe --always'.execute().text.trim()
    String newSdkName = appName + "-" + gitSha + ".zip"

    from('bin/libs',
        'bin/outputs/aar')
    include '*'
    archiveName newSdkName
}
